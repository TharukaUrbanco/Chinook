@page "/addPlayList"

@inject NavigationManager NavigationManager
@inject IPlayListService PlayListService;

<div class="row">
    <div class="col-md-3"></div>
    <div class="col-md-6">
        <h3>Add PlayList</h3>

        <br />
        <EditForm Model="@addNewPlayListModel" OnValidSubmit="SaveChanges">

            <DataAnnotationsValidator></DataAnnotationsValidator>
            <ValidationSummary></ValidationSummary>

            <div class="form-group">
                <label for="name">PlayList Name</label>
                <InputText id="name"
                           @bind-Value="addNewPlayListModel.PlayListName"
                           class="form-control">
                </InputText>
            </div>
            <br />
            <button type="submit" class="btn btn-primary">Save</button>
            <button type="button" class="btn btn-danger" @onclick="Cancel">Cancel</button>

        </EditForm>
    </div>
    <div class="col-md-3"></div>
</div>



@code {

    [CascadingParameter]
    private Task<AuthenticationState> authenticationState { get; set; }

    private ValidationMessageStore? messageStore;

    private string CurrentUserId = string.Empty;

    private async Task<string> GetUserId()
    {
        var user = (await authenticationState).User;
        var userId = user.FindFirst(u => u.Type.Contains(ClaimTypes.NameIdentifier))?.Value;
        return userId;
    }

    protected override async Task OnParametersSetAsync()
    {
        CurrentUserId = await GetUserId();
       
    }

    private AddNewPlayList addNewPlayListModel = new AddNewPlayList();

    private async Task SaveChanges()
    {
        var result = await PlayListService.AddNewPlayListToUser(addNewPlayListModel.PlayListName, CurrentUserId);
        if (result == "Success")
        {
            NavigationManager.NavigateTo("/", true);
        }      
        else
        {
            //messageStore.Add(() => addNewPlayListModel.PlayListName, "ItemName invalid");
        }
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/");
    }

}